//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SymbolicStrings.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591



using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SymbolicStringsParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface ISymbolicStringsListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] SymbolicStringsParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] SymbolicStringsParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.terms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerms([NotNull] SymbolicStringsParser.TermsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.terms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerms([NotNull] SymbolicStringsParser.TermsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] SymbolicStringsParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] SymbolicStringsParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.word"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWord([NotNull] SymbolicStringsParser.WordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.word"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWord([NotNull] SymbolicStringsParser.WordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.symbolic_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbolic_string([NotNull] SymbolicStringsParser.Symbolic_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.symbolic_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbolic_string([NotNull] SymbolicStringsParser.Symbolic_stringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.symbolic_string_h"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSymbolic_string_h([NotNull] SymbolicStringsParser.Symbolic_string_hContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.symbolic_string_h"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSymbolic_string_h([NotNull] SymbolicStringsParser.Symbolic_string_hContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] SymbolicStringsParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] SymbolicStringsParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.condition_h"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition_h([NotNull] SymbolicStringsParser.Condition_hContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.condition_h"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition_h([NotNull] SymbolicStringsParser.Condition_hContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SymbolicStringsParser.atomic_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomic_condition([NotNull] SymbolicStringsParser.Atomic_conditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SymbolicStringsParser.atomic_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomic_condition([NotNull] SymbolicStringsParser.Atomic_conditionContext context);
}
